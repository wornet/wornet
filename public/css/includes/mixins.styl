
css3-prefix(prop, value)
	if $supportWebkit
		{"-webkit-" + prop} value
	if $supportKhtml
		{"-khtml-" + prop} value
	if $supportMoz
		{"-moz-" + prop} value
	if $supportMS
		{"-ms-" + prop} value
	if $supportOpera
		{"-o-" + prop} value
	{prop} value

pos(top = false, left = false)
	if left
		left left
	if top
		top top

fix(top = false, left = false)
	position fixed
	pos(top, left)

rel(top = false, left = false)
	position relative
	pos(top, left)

abs(top = false, left = false)
	position absolute
	pos(top, left)

size(width = false, height = width)
	width width
	height height

border-radius()
	// Fonction pour arondir les bordures d'une boite.
	css3-prefix("border-radius", arguments)

appearance()
	css3-prefix("appearance", arguments)

resize()
	css3-prefix("resize", arguments)

box-sizing()
	css3-prefix("box-sizing", arguments)

transition()
	css3-prefix("transition", arguments)

transition-property()
	css3-prefix("transition-property", unquote(join(', ', arguments)))

background-size()
	css3-prefix("background-size", arguments)

outline()
	css3-prefix("outline", arguments)

user-select()
	css3-prefix("user-select", arguments)

opacity(n)
	css3-prefix("opacity", n)
	if $supportMS
		-ms-filter unquote('progid:DXImageTransform.Microsoft.Alpha(Opacity=' + round(n * 100) + ')')
	filter unquote('alpha(opacity=' + round(n * 100) + ')')

box-shadow()
	// Fonction pour créer des ombres sur une boite.
	css3-prefix("box-shadow", arguments)

background-linear-gradient(startPoint, startColor, startInterval, endColor, endInterval)
	// Fonction pour créer des fonds linéaire.
	background-color startColor
	if $supportWebkit
		background-image -webkit-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	if $supportMoz
		background-image -moz-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	if $supportMS
		background-image -ms-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	if $supportOpera
		background-image -o-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	background-image linear-gradient(startPoint, startColor startInterval, endColor endInterval)

cover(url)
	background-image url(bigJpg(unquote(url)))
	if $supportMS
		-ms-filter quote("progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + bigJpg(unquote(url)) + "', sizingMethod='scale')")
	filter unquote("progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + bigJpg(unquote(url)) + "', sizingMethod='scale')")
